{
	"name": "FlowOne",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "SourceCsv",
						"type": "DatasetReference"
					},
					"name": "SourceBlob"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DbTable",
						"type": "DatasetReference"
					},
					"name": "Destination"
				}
			],
			"transformations": [
				{
					"name": "RemoveColumns",
					"description": "Removing columns"
				},
				{
					"name": "lowercase"
				},
				{
					"name": "CleanNameRow",
					"description": "Remove rows that have no Guid IDs"
				},
				{
					"name": "RemoveRows"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Name as string,",
				"          Modified as string,",
				"          {Modified By} as string,",
				"          {Sï¿½kerhetsdatablad} as string,",
				"          {lg_complaint.activityid} as string,",
				"          {opportunity.opportunityid} as string,",
				"          {quote.quoteid} as string,",
				"          {salesorder.salesorderid} as string,",
				"          {Item Type} as string,",
				"          Path as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> SourceBlob",
				"SourceBlob select(mapColumn(",
				"          Name,",
				"          OID = {opportunity.opportunityid},",
				"          QID = {quote.quoteid},",
				"          SID = {salesorder.salesorderid},",
				"          Path",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> RemoveColumns",
				"RemoveRows derive(OID = lower(OID),",
				"          QID = lower(QID),",
				"          SID = lower(SID)) ~> lowercase",
				"RemoveColumns derive(Name = replace(Name, '\"', '')) ~> CleanNameRow",
				"CleanNameRow alterRow(deleteIf(isNull(OID) || isNull(QID) || isNull(SID))) ~> RemoveRows",
				"lowercase sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     recreate:true,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> Destination"
			]
		}
	}
}